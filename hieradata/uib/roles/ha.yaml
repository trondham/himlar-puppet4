---
# Allow ports in selinux|
profile::base::selinux::ports:
  sfb-https:
    context:  'http_port_t'
    protocol: 'tcp'
    port:     '4443'
  ldaps:
    context:  'http_port_t'
    protocol: 'tcp'
    port:     '636'
    argument: '-m'
  ldap:
    context:  'http_port_t'
    protocol: 'tcp'
    port:     '389'
    argument: '-m'

#
# Default interfaces
#
named_interfaces::config:
  mgmt:
    - em1
  public:
    - bond0.6

corosync::unicast_addresses:
  - "%{hiera('netcfg_public_netpart')}.96"
  - "%{hiera('netcfg_public_netpart')}.97"

corosync::quorum_members:
  - "%{hiera('netcfg_public_netpart')}.96"
  - "%{hiera('netcfg_public_netpart')}.97"

corosync_cluster_node1:   "%{::location}-ha-01.%{hiera('domain_mgmt')}"
corosync_cluster_node2:   "%{::location}-ha-02.%{hiera('domain_mgmt')}"

corosync_cluster_vip1:    "%{hiera('netcfg_public_netpart')}.200"
corosync_cluster_vip2:    "%{hiera('netcfg_public_netpart')}.201"
corosync_cluster_vip3:    "%{hiera('netcfg_public_netpart')}.91"
corosync_cluster_vip4:    "%{hiera('netcfg_public_netpart')}.114"

# Firewall
profile::firewall::rules::custom_rules:
  '451 haproxy http for public vip1':
    proto:        'tcp'
    dport:        [ '80', '443', '389', '636' ]
    destination:  "%{hiera('corosync_cluster_vip1')}"
  '452 haproxy http for public vip2':
    proto:        'tcp'
    dport:        [ '80', '443', '389', '636' ]
    destination:  "%{hiera('corosync_cluster_vip2')}"
  '453 haproxy http for internal vip3':
    proto:        'tcp'
    dport:        [ '80', '443', '389', '636' ]
    source:       '129.177.0.0/16'
    destination:  "%{hiera('corosync_cluster_vip3')}"
  '454 haproxy http for internal vip4':
    proto:        'tcp'
    dport:        [ '80', '443', '389', '636' ]
    source:       '129.177.0.0/16'
    destination:  "%{hiera('corosync_cluster_vip4')}"
  '455 haproxy status':
    proto:        'tcp'
    dport:        ['9000']
    source:       '129.177.10.0/24'
    destination:
      - "%{hiera('corosync_cluster_vip4')}"
      - "%{hiera('corosync_cluster_vip3')}"
      - '%{::ipaddress_public1}'

# HAproxy
haproxy::global_options:
  log:          '127.0.0.1 local6 info alert'
  nbproc:       '2'
  cpu-map:      ['1 0', '2 2']
  maxconn:      '10000' # per core
haproxy::defaults_options:
  log:          'global'  #FIXME turn of debug logging in production
  stats:        []
  option:       ['dontlognull', 'httplog', 'http-server-close', 'redispatch']
  maxconn:      '2000' # per frontend
  timeout:
    - 'connect 10s'
    - 'http-keep-alive 10s'
    - 'check 10s'
    - 'http-request 10s'
    - 'client 30s'
    - 'server 30s'
    - 'queue 30s'
    - 'tunnel 3m' # needed for exchange

profile::highavailability::loadbalancing::haproxy::haproxy_mapfile:
  uib_https_domains:
    ensure: present
    mappings:
      - 'meet.uib.no':                            'uib-https-sfb'
      - 'dialin.uib.no':                          'uib-https-sfb'
      - 'lyncdiscoverinternal.uib.no':            'uib-https-sfb'
      - 'lyncdiscoverinternal.uni.no':            'uib-https-sfb'
      - 'lyncdiscoverinternal.holbergprisen.no':  'uib-https-sfb'
      - 'lyncdiscoverinternal.bergento.no':       'uib-https-sfb'
      - 'sfb-webpool01.uib.no':                   'uib-https-sfb'
      - 'lyncadmin.uib.no':                       'uib-https-sfb'
      - 'exch.uib.no':                            'uib-https-exch'
      - 'portal.uib.no':                          'uib-https-adm'
      - "dashboard.uh-iaas.no":                   'uib-https-uh-dashboard'
      - "dashboard-ha.uh-iaas.no":                'uib-https-uh-dashboard'
      - "access.uh-iaas.no":                      'uib-https-uh-access'
      - "access-ha.uh-iaas.no":                   'uib-https-uh-access'
      - "status.uh-iaas.no":                      'uib-https-uh-status'
      - "status-ha.uh-iaas.no":                   'uib-https-uh-status'
  uib_http_domains:
    ensure: present
    mappings:
      - 'meet.uib.no':                            'uib-http-sfb'
      - 'dialin.uib.no':                          'uib-http-sfb'
      - 'lyncdiscoverinternal.uib.no':            'uib-http-sfb'
      - 'lyncdiscoverinternal.uni.no':            'uib-http-sfb'
      - 'lyncdiscoverinternal.holbergprisen.no':  'uib-http-sfb'
      - 'lyncdiscoverinternal.bergento.no':       'uib-http-sfb'
      - 'sfb-webpool01.uib.no':                   'uib-http-sfb'
      - 'lyncadmin.uib.no':                       'uib-http-sfb'
      - 'portal.uib.no':                          'uib-http-adm'
  public_https_domains:
    ensure: present
    mappings:
      - 'meet.uib.no':                            'public-https-sfb'
      - 'dialin.uib.no':                          'public-https-sfb'
      - 'lyncdiscover.uib.no':                    'public-https-sfb'
      - 'lyncdiscover.uni.no':                    'public-https-sfb'
      - 'lyncdiscover.holbergprisen.no':          'public-https-sfb'
      - 'lyncdiscover.bergento.no':               'public-https-sfb'
      - 'sfb-webext01.uib.no':                    'public-https-sfb'
      - 'mitt.uib.no':                            'public-https-mittuib'
  public_http_domains:
    ensure: present
    mappings:
      - 'meet.uib.no':                            'public-http-sfb'
      - 'dialin.uib.no':                          'public-http-sfb'
      - 'lyncdiscover.uib.no':                    'public-http-sfb'
      - 'lyncdiscover.uni.no':                    'public-http-sfb'
      - 'lyncdiscover.holbergprisen.no':          'public-http-sfb'
      - 'lyncdiscover.bergento.no':               'public-http-sfb'
      - 'sfb-webext01.uib.no':                    'public-http-sfb'

profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
  'uib-https-sfb':
    listening_service:  'uib-https-sfb'
    ports:              443
    server_names:       ['sfb-fe01.uib.no', 'sfb-fe02.uib.no', 'sfb-fe03.uib.no']
    ipaddresses:        ['129.177.14.231','129.177.14.232','129.177.14.233']
    options:
      - 'check'
      - 'port 80'
  'uib-http-sfb':
    listening_service:  'uib-http-sfb'
    ports:              80
    server_names:       ['sfb-fe01.uib.no', 'sfb-fe02.uib.no', 'sfb-fe03.uib.no']
    ipaddresses:        ['129.177.14.231','129.177.14.232','129.177.14.233']
    options:
      - 'check'
  'public-https-sfb':
    listening_service:  'public-https-sfb'
    ports:              4443
    server_names:       ['sfb-fe01.uib.no', 'sfb-fe02.uib.no', 'sfb-fe03.uib.no']
    ipaddresses:        ['129.177.14.231','129.177.14.232','129.177.14.233']
    options:
      - 'check'
      - 'port 80'
  'public-http-sfb':
    listening_service:  'public-http-sfb'
    ports:              8080
    server_names:       ['sfb-fe01.uib.no', 'sfb-fe02.uib.no', 'sfb-fe03.uib.no']
    ipaddresses:        ['129.177.14.231','129.177.14.232','129.177.14.233']
    options:
      - 'check'
      - 'port 80'
  'public-https-mittuib':
    listening_service:  'public-https-mittuib'
    ports:              443
    server_names:       ['mitt.uib.no']
    ipaddresses:        [129.177.6.11]
    options:            'check'
  'public-ldap-prod':
    listening_service:  'public-ldap-prod'
    ports:              '389'
    server_names:       ['p1ldap01.uib.no', 'p2ldap01.uib.no', 'p1ldap02.uib.no', 'p2ldap02.uib.no']
    ipaddresses:        ['129.177.5.229', '129.177.5.230', '129.177.5.234', '129.177.5.236']
    options:
      - 'check'
  'public-ldaps-prod':
    listening_service:  'public-ldaps-prod'
    ports:              '636'
    server_names:       ['p1ldap01.uib.no', 'p2ldap01.uib.no', 'p1ldap02.uib.no', 'p2ldap02.uib.no']
    ipaddresses:        ['129.177.5.229', '129.177.5.230', '129.177.5.234', '129.177.5.236']
    options:
      - 'check'
  'uib-https-exch':
    listening_service:  'uib-https-exch'
    ports:              443
    server_names:       ['exchange01.uib.no', 'exchange02.uib.no']
    ipaddresses:        ['129.177.14.178','129.177.14.179']
    options:            'check'
  'uib-https-dashboard':
    listening_service:  'uib-https-uh-dashboard'
    ports:              443
    server_names:       ['osl-dashboard-01', 'bgo-dashboard-01']
    ipaddresses:        [158.37.63.254, 158.39.77.254]
    options:            'check'
  uib-https-uh-access:
    listening_service:  'uib-https-uh-access'
    ports:              443
    server_names:       ['bgo-access-01']
    ipaddresses:        [158.39.77.252]
    options:            'check'
  uib-https-uh-status:
    listening_service:  'uib-https-uh-status'
    ports:              443
    server_names:       ['bgo-status-01', 'osl-status-01']
    ipaddresses:        ['158.39.77.250', '158.37.63.250']
    options:            'check'
  'uib-https-adm':
    listening_service:  'uib-https-adm'
    ports:              443
    server_names:       ['rd-web01.uib.no', 'rd-web02.uib.no']
    ipaddresses:        ['129.177.14.13', '129.177.14.182']
    options:
      - 'check'
  'uib-http-adm':
    listening_service:  'uib-http-adm'
    ports:              80
    server_names:       ['rd-web01.uib.no', 'rd-web02.uib.no']
    ipaddresses:        ['129.177.14.13', '129.177.14.182']
    options:
      - 'check'
  'uib-ldap-test':
    listening_service:  'uib-ldap-test'
    ports:              '389'
    server_names:       ['t1ldap01.uib.no']
    ipaddresses:        ['129.177.5.183']
    options:
      - 'check'
  'uib-ldaps-test':
    listening_service:  'uib-ldaps-test'
    ports:              '636'
    server_names:       ['t1ldap01.uib.no']
    ipaddresses:        ['129.177.5.183']
    options:
      - 'check'

profile::highavailability::loadbalancing::haproxy::haproxy_backends:
  public-https-sfb:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      - option:
        - 'httpchk /healthcheck.html'
  public-http-sfb:
    mode:             'http'
    options:
      - balance:      'roundrobin'
      - option:
        - 'httpchk /healthcheck.html'
  public-https-mittuib:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      - option:       ['ssl-hello-chk']
  public-ldap-prod:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  public-ldaps-prod:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-https-sfb:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      - option:
        - 'httpchk /healthcheck.html'
  uib-http-sfb:
    mode:             'http'
    options:
      - balance:      'roundrobin'
      - option:
        - 'httpchk /healthcheck.html'
  uib-https-exch:
    mode:             'tcp'
    options:
      - balance:      'source'
  uib-https-adm:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
  uib-http-adm:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
  uib-ldap-test:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-ldaps-test:
    mode:             'tcp'
    options:
      - balance:      'leastconn'
  uib-https-uh-status:
    mode:             'tcp'
    options:
      - balance:      'roundrobin'
      - option:       ['ssl-hello-chk']
  uib-https-uh-access:
    mode: 'tcp'
    options:
      - balance:      'source'
      - option:       ['ssl-hello-chk']
  uib-https-uh-dashboard:
    mode: 'tcp'
    options:
      - balance:      'source'
      - option:       ['ssl-hello-chk']
#      - stick-table:  'type binary len 32 size 30k expire 30m'
#      - acl:
#        - 'clienthello req_ssl_hello_type 1'
#        - 'serverhello rep_ssl_hello_type 2'
#      - tcp-request:
#        - 'inspect-delay 15s'
#        - 'content reject unless clienthello'
#      - tcp-response:
#        - 'content reject unless serverhello'
#      - stick:
#        - 'on payload_lv(43,1) if clienthello'
#        - 'store-response payload_lv(43,1) if serverhello'

profile::highavailability::loadbalancing::haproxy::haproxy_frontends:
  public-http:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip1')}:80": []
      "%{hiera('corosync_cluster_vip2')}:80": []
    options:
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/public_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  public-https:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:443": []
      "%{hiera('corosync_cluster_vip2')}:443": []
    options:
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:      '%[req_ssl_sni,lower,map(/etc/haproxy/public_https_domains.map)]'
  public-ldap:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:389": []
      "%{hiera('corosync_cluster_vip2')}:389": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-ldap-prod'
  public-ldaps:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip1')}:636": []
      "%{hiera('corosync_cluster_vip2')}:636": []
    options:
      - option:         'tcplog'
      - use_backend:    'public-ldaps-prod'
  uib-http:
    mode:               'http'
    bind:
      "%{hiera('corosync_cluster_vip3')}:80": []
      "%{hiera('corosync_cluster_vip4')}:80": []
    options:
      - option:         'httplog'
      - use_backend:    '%[req.hdr(host),lower,map(/etc/haproxy/uib_http_domains.map)]'
      - capture:        'request header Host len 32' #for debug
  uib-https:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:443": []
      "%{hiera('corosync_cluster_vip4')}:443": []
    options:
      - option:         'tcplog'
      - tcp-request:
        - 'inspect-delay 5s'
        - 'content accept if { req_ssl_hello_type 1 }'
      - use_backend:      '%[req_ssl_sni,lower,map(/etc/haproxy/uib_https_domains.map)]'
  uib-ldap:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:389": []
      "%{hiera('corosync_cluster_vip4')}:389": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-ldap-test'
  uib-ldaps:
    mode:               'tcp'
    bind:
      "%{hiera('corosync_cluster_vip3')}:636": []
      "%{hiera('corosync_cluster_vip4')}:636": []
    options:
      - option:         'tcplog'
      - use_backend:    'uib-ldaps-test'

# Corosync VIP and HAproxy
profile::highavailability::corosync::primitives:
  'pubip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip1')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'pubip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip2')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip1':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip3')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'uibip2':
    'primitive_class':    'ocf'
    'primitive_type':     'IPaddr2'
    'provided_by':        'heartbeat'
    'parameters':
      'ip':               "%{hiera('corosync_cluster_vip4')}"
      'cidr_netmask':     '24'
    operations:
      'monitor':          { 'interval': '10s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }
  'haproxy':
    'primitive_class':    'systemd'
    'primitive_type':     'haproxy'
    'operations':
      'monitor':          { 'interval': '5s', 'timeout': '20s' }
      'start':            { 'interval': '0s', 'timeout': '20s' }
      'stop':             { 'interval': '0s', 'timeout': '20s' }

profile::highavailability::corosync::locations:
  'pubip_location1':
    primitive:  'pubip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'pubip_location2':
    primitive:  'pubip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'
  'uibip_location1':
    primitive:  'uibip1'
    node_name:  "%{hiera('corosync_cluster_node1')}"
    score:      'INFINITY'
  'uibip_location2':
    primitive:  'uibip2'
    node_name:  "%{hiera('corosync_cluster_node2')}"
    score:      'INFINITY'

profile::highavailability::corosync::colocations:
  'pubip1_haproxy':
    primitives:   ['clone_haproxy', 'pubip1']
  'pubip2_haproxy':
    primitives:   ['clone_haproxy', 'pubip2']
  'uibip1_haproxy':
    primitives:   ['clone_haproxy', 'uibip1']
  'uibip2_haproxy':
    primitives:   ['clone_haproxy', 'uibip2']
